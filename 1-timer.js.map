{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst timerFields = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  locale: {\n    weekdays: {\n      shorthand: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'], // Two-letter weekday abbreviations\n      longhand: [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday',\n      ],\n    },\n  },\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startButton.disabled = true;\n      userSelectedDate = null;\n    } else {\n      startButton.disabled = false; // Activate button if valid date\n      userSelectedDate = selectedDate;\n      iziToast.success({\n        title: 'Success',\n        message: 'You have selected a valid date',\n        position: 'topRight',\n      });\n    }\n  },\n};\n\n// Initialize flatpickr\nflatpickr(datetimePicker, options);\n\nstartButton.addEventListener('click', () => {\n  if (userSelectedDate) {\n    startButton.disabled = true;\n    datetimePicker.disabled = true;\n    startCountdown(userSelectedDate);\n  }\n});\n\nfunction startCountdown(endDate) {\n  clearInterval(timerInterval);\n\n  function updateTime() {\n    const now = new Date();\n    const timeLeft = endDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(timerInterval);\n      updateTimerDisplay(0, 0, 0, 0);\n      iziToast.info({\n        title: \"Time's up!\",\n        message: 'The countdown has ended.',\n        position: 'topRight',\n      });\n      startButton.disabled = false; // Re-enable button after countdown ends\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeLeft);\n    updateTimerDisplay(days, hours, minutes, seconds);\n  }\n\n  updateTime();\n  timerInterval = setInterval(updateTime, 1000);\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  timerFields.days.textContent = addLeadingZero(days);\n  timerFields.hours.textContent = addLeadingZero(hours);\n  timerFields.minutes.textContent = addLeadingZero(minutes);\n  timerFields.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["datetimePicker","startButton","timerFields","userSelectedDate","timerInterval","options","selectedDates","selectedDate","iziToast","flatpickr","startCountdown","endDate","updateTime","timeLeft","updateTimerDisplay","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"2GAKA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,CAClB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,OAAQ,CACN,SAAU,CACR,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EACpD,SAAU,CACR,SACA,UACA,YACA,WACA,SACA,WACA,QACD,CACF,CACF,EACD,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDP,EAAY,SAAW,GACvBE,EAAmB,OAEnBF,EAAY,SAAW,GACvBE,EAAmBI,EACnBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,iCACT,SAAU,UAClB,CAAO,EAEJ,CACH,EAGAC,EAAUT,EAAgBK,CAAO,EAEjCJ,EAAY,iBAAiB,QAAS,IAAM,CACtCE,IACFF,EAAY,SAAW,GACvBD,EAAe,SAAW,GAC1BU,EAAeP,CAAgB,EAEnC,CAAC,EAED,SAASO,EAAeC,EAAS,CAC/B,cAAcP,CAAa,EAE3B,SAASQ,GAAa,CAEpB,MAAMC,EAAWF,EADL,IAAI,KAGhB,GAAIE,GAAY,EAAG,CACjB,cAAcT,CAAa,EAC3BU,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7BN,EAAS,KAAK,CACZ,MAAO,aACP,QAAS,2BACT,SAAU,UAClB,CAAO,EACDP,EAAY,SAAW,GACvB,MACD,CAED,KAAM,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAQ,EAC5DC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,CAEDN,IACAR,EAAgB,YAAYQ,EAAY,GAAI,CAC9C,CAEA,SAASE,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACzDhB,EAAY,KAAK,YAAckB,EAAeL,CAAI,EAClDb,EAAY,MAAM,YAAckB,EAAeJ,CAAK,EACpDd,EAAY,QAAQ,YAAckB,EAAeH,CAAO,EACxDf,EAAY,QAAQ,YAAckB,EAAeF,CAAO,CAC1D,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}